###################################################################################
#                             Лабораторная работа № 4                             #
###################################################################################
# Дисциплина: Проектирование, архитектура и конструирование программных средств   #
# Студент: Толкачев Е.Н.                                                          #
# Группа: ИВТ-416                                                                 #
# Вариант 8                                                                       #
###################################################################################
#                                     Задание                                     #
###################################################################################
# 1. Представьте таблицы (согласно вашему варианту) в виде структур языка Python;
# 2. Реализуйте в консоли интерфейс по добавлению, удалению, изменению
#    данных. Имейте в виду, что связанные операции (удаление, добавление, изменение)
#    для связанных таблиц, должны изменять данных во всех связанных структурах;
# 3. Реализуйте функционал по сохранению данных в файлы формата .csv и считыванию
#    информации из файлов.
#
# Сущности:
#   Пр. сертификат: ID, Номер;
#   Ребенок: ID, ФИО, ФИО_отца, ФИО_матери, Возраст, ID_сертификат, ID_Врача;
#   Врач: ID, ФИО, Возраст.
#
# 1. Используйте нужные структуры  данных для ее хранения. Заполните БД. Выведите список детей в возрасте до 10 лет;
# 2. Для БД из задания 1 выведите информацию о детях, чьи родители имеют разные фамилии;
# 3. Для БД из задания 1 выведите список врачей в возрасте от 20 до 60 лет.
# ##################################################################################

#######################
#      Сертификат     #
#######################
certificate_id = 0
certificate_db = dict()
#######################


#######################
#         Врач        #
#######################
doctor_id = 0
doctor_db = dict()
#######################


#######################
#        Ребенок      #
#######################
child_id = 0
child_db = dict()
#######################

# Класс: сертификат
class Certificate:
    def __init__(self, number):
        global certificate_id, certificate_db
        certificate_id += 1
        certificate_db.update({certificate_id: number})

# Класс: врач
class Doctor:
    def __init__(self, full_name, age):
        global doctor_id, doctor_db
        self.info = []
        self.info.append(full_name)
        self.info.append(int(age))
        doctor_id += 1
        doctor_db.update({doctor_id: self.info})

# Класс: ребенок
class Child:
    def __init__(self,
                 child_full_name,     # ФИО ребенка,
                 father_full_name,    # ФИО отца,
                 mother_full_name,    # ФИО матери,
                 child_age,           # Возраст ребенка,
                 certificate_ref_id,  # ID сертификата,
                 doctor_ref_id):      # ID врача.

        global child_id, child_db
        self.info = []
        child_id += 1
        self.info.append(child_full_name)
        self.info.append(father_full_name)
        self.info.append(mother_full_name)
        self.info.append(child_age)
        self.info.append(certificate_ref_id)
        self.info.append(doctor_ref_id)
        child_db.update({child_id: self.info})


# Сертификаты (заполнение данных)
certificate_1 = Certificate('1234-56789')
certificate_2 = Certificate('2345-67891')
certificate_3 = Certificate('3456-78911')
certificate_4 = Certificate('7891-89101')
certificate_5 = Certificate('9999-99888')

# Врачи (заполнение данных)
doctor_1 = Doctor('Иванов И.И.', 21)
doctor_2 = Doctor('Петров П.П.', 45)
doctor_3 = Doctor('Сидоров А.А.', 61)
doctor_4 = Doctor('Кузнецов В.В.', 60)
doctor_5 = Doctor('Васильев Б.А.', 33)

# Дети (заполнение данных)
child_1 = Child('Соколов С.С.',  'Соколов С.В.',  'Соколова А.П.',   4,      1,   1)
child_2 = Child('Новиков Д.А.',  'Новиков А.Г.',  'Волкова Е.Б.',    3,      2,   2)
child_3 = Child('Алексеев А.К.', 'Алексеев К.А.', 'Алексеева П.В.',  11,     3,   2)
child_4 = Child('Лебедев М.М.',  'Лебедев М.А.',  'Семенова А.П.',   9,      4,   3)
child_5 = Child('Егоров Е.Е.',   'Егоров Е.С.',   'Егорова М.А.',    12,     5,   4)
child_6 = Child('Павлов С.С.',   'Павлов С.П.',   'Михайлова А.Б.',  4,      1,   5)

print("-----------------------------------------------------------------")
print("ID|  ФИО ребенка  | ФИО отца | ФИО матери | Возраст | Серт | Врач")
print("-----------------------------------------------------------------")
for index, record in child_db.items():
    print(f"{index} | {record}")

print("\n\nЗапрос 1: найти всех детей возрастом до 10 лет")
print("-----------------------------------------------------------------")
print("ID|  ФИО ребенка  | ФИО отца | ФИО матери | Возраст | Серт | Врач")
print("-----------------------------------------------------------------")
for index, record in child_db.items():
    if (record[3] < 10): print(f"{index} | {record}")

print("\n\nЗапрос 2: выведите список врачей в возрасте от 20 до 60 лет")
print("-----------------------------------------------------------------")
print("ID|  ФИО ребенка  | ФИО отца | ФИО матери | Возраст | Серт | Врач")
print("-----------------------------------------------------------------")
for index, record in child_db.items():
    childs_doctor_age = doctor_db.get(record[5])
    if (20 <= childs_doctor_age[1] < 60):
        print(f"{index} | {record}")

