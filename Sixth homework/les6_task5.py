"""
Реализовать класс Stationery (канцелярская принадлежность).
Определить в нем атрибут title (название) и метод draw (отрисовка). Метод выводит сообщение “Запуск отрисовки”.
Создать три дочерних класса Pen (ручка), Pencil (карандаш), Handle (маркер).
В каждом из классов реализовать переопределение метода draw.
Для каждого из классов методы должен выводить уникальное сообщение.
Создать экземпляры классов и проверить, что выведет описанный метод для каждого экземпляра.
"""
# Я немного решил изменить задачу, с Вашего позволения: в родительском классе будет определен метод draw,
# "рисующий" ёлку. В дочерних классах будет переопределен атрибут line_type, означающий символ, которым предмет будет
# отрисован.

class Stationery:
    ################
    ##  Атрибуты  ##
    ################
    title = ''
    line_type = '*'

    ################
    ##   Методы   ##
    ################
    def draw(self, levels = 3) -> str:
        print(f'Запуск отрисовки. Используемый инструмент: {self.title}')
        tree = '      *\n'
        for i in range(0, levels):
            tree += '     ***\n   **   **\n ***     ***\n***** * *****\n'
        return tree.replace('*', self.line_type)


class Pen(Stationery):
    title = 'Ручка'
    line_type = '='

class Pencil(Stationery):
    title = 'Карандаш'
    line_type = '-'

class Handle(Stationery):
    title = 'Маркер'
    line_type = '#'

pen = Pen()
pencil = Pencil()
handle = Handle()

print(pen.draw())
print(pencil.draw())
print(handle.draw())

